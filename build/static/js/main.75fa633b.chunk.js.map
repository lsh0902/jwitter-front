{"version":3,"sources":["components/Header.jsx","components/Banner.jsx","components/NewTweetForm.jsx","util/date.js","components/Avatar.jsx","components/EditTweetForm.jsx","components/TweetCard.jsx","pages/Login.jsx","context/AuthContext.jsx","components/Tweets.jsx","pages/AllTweets.jsx","pages/MyTweets.jsx","App.jsx","service/auth.js","service/tweet.js","db/token.js","connection/connect.js","index.js"],"names":["Header","memo","username","onLogout","onMyTweets","onAllTweets","className","src","alt","onClick","Banner","text","isAlert","NewTweetForm","tweetService","onError","onCreated","useState","tweet","setTweet","onSubmit","event","a","preventDefault","postTweet","then","created","catch","type","placeholder","value","required","autoFocus","onChange","target","parseDate","tdate","Date","parse","now","diff","Math","floor","round","month","toLocaleDateString","getDate","Avatar","url","name","charAt","EditTweetForm","onUpdate","onClose","setText","id","TweetCard","owner","onDelete","onUsernameClick","createdAt","editing","setEditing","Login","onSignUp","onLogin","signup","setSignup","setUsername","password","setPassword","setName","email","setEmail","setURL","setIsAlert","setError","error","toString","checked","htmlFor","AuthContext","createContext","contextRef","createRef","AuthProvider","authService","authErrorEventBus","children","undefined","user","setUser","useImperativeHandle","token","useEffect","listen","err","console","log","me","signUp","useCallback","logIn","login","logout","context","useMemo","Provider","AuthErrorEventBus","callback","this","useAuth","useContext","Tweets","addable","tweets","setTweets","history","useHistory","getTweets","stopSync","onSync","tweetId","deleteTweet","filter","updateTweet","updated","map","item","push","setTimeout","transient","length","AllTweets","MyTweets","useParams","App","window","confirm","exact","path","AuthService","base","storage","instance","axios","create","post","res","data","result","save","get","clear","TweetService","socket","isExpired","e","response","status","notify","baseURL","defaults","headers","common","params","Authorization","userId","delete","baseUrl","put","TOKEN","TokenStorage","localStorage","setItem","getItem","Socket","getToken","socketIO","auth","f","on","connected","connect","off","tokenStorage","process","msg","mysocket","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75fa633b.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst Header = memo(({ username, onLogout, onMyTweets, onAllTweets }) => {\n  return (\n    <header className='header'>\n      <div className='logo'>\n        <img src='./img/logo.png' alt='Dwitter Logo' className='logo-img' />\n        <h1 className='logo-name'>Jwitter</h1>\n        {username && <span className='logo-user'>@{username}</span>}\n      </div>\n      {username && (\n        <nav className='menu'>\n          <button onClick={onAllTweets}>All Tweets</button>\n          <button onClick={onMyTweets}>My Tweets</button>\n          <button className='menu-item' onClick={onLogout}>\n            Logout\n          </button>\n        </nav>\n      )}\n    </header>\n  );\n});\n\nexport default Header;\n","import React, { memo } from 'react';\n\nconst Banner = memo(({ text, isAlert }) => (\n  <>\n    {text && (\n      <p className={`banner ${isAlert ? 'banner-red' : 'banner-green'}`}>\n        {text}\n      </p>\n    )}\n  </>\n));\nexport default Banner;\n","import React, { useState } from 'react';\n\nconst NewTweetForm = ({ tweetService, onError, onCreated }) => {\n  const [tweet, setTweet] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    tweetService\n      .postTweet(tweet)\n      .then((created) => {\n        setTweet('');\n        // onCreated(created);\n      })\n      .catch(onError);\n  };\n\n  const onChange = (event) => {\n    setTweet(event.target.value);\n  };\n\n  return (\n    <form className='tweet-form' onSubmit={onSubmit}>\n      <input\n        type='text'\n        placeholder='Edit your tweet'\n        value={tweet}\n        required\n        autoFocus\n        onChange={onChange}\n        className='form-input tweet-input'\n      />\n      <button type='submit' className='form-btn'>\n        Post\n      </button>\n    </form>\n  );\n};\n\nexport default NewTweetForm;\n","export default function parseDate(tdate) {\n  const created = new Date(Date.parse(tdate));\n  const now = new Date();\n  const diff = Math.floor((now - created) / 1000);\n  if (diff <= 1) {\n    return 'just now';\n  }\n  if (diff < 20) {\n    return diff + ' seconds ago';\n  }\n  if (diff < 40) {\n    return 'half a minute ago';\n  }\n  if (diff < 60) {\n    return 'less than a minute ago';\n  }\n  if (diff <= 90) {\n    return 'one minute ago';\n  }\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago';\n  }\n  if (diff <= 5400) {\n    return '1 hour ago';\n  }\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago';\n  }\n  if (diff <= 129600) {\n    return '1 day ago';\n  }\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago';\n  }\n  if (diff <= 777600) {\n    return '1 week ago';\n  }\n  const month = created.toLocaleDateString('default', { month: 'long' });\n  return `on ${month} ${created.getDate()}`;\n}\n","import React, { memo } from 'react';\n\nconst Avatar = memo(({ url, name }) => (\n  <div>\n    {!!url ? (\n      <img src={url} alt='avatar' className='avatar-img' />\n    ) : (\n      <div className='avatar-txt'>{name.charAt(0)}</div>\n    )}\n  </div>\n));\n\nexport default Avatar;\n","import React, { useState } from 'react';\n\nconst EditTweetForm = ({ tweet, onUpdate, onClose }) => {\n  const [text, setText] = useState(tweet.text);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    onUpdate(tweet.id, text);\n    onClose();\n  };\n\n  const onChange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <form className='edit-tweet-form' onSubmit={onSubmit}>\n      <input\n        type='text'\n        placeholder='Edit your tweet'\n        value={text}\n        required\n        autoFocus\n        onChange={onChange}\n        className='form-input tweet-input'\n      />\n      <div className='edit-tweet-form-action'>\n        <button type='submit' className='form-btn-update'>\n          Update\n        </button>\n        <button type='button' className='form-btn-cancel' onClick={onClose}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditTweetForm;\n","import React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\n\nconst TweetCard = memo(\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\n    const { id, username, name, url, text, createdAt } = tweet;\n    const [editing, setEditing] = useState(false);\n    const onClose = () => setEditing(false);\n\n    return (\n      <li className='tweet'>\n        <section className='tweet-container'>\n          <Avatar url={url} name={name} />\n          <div className='tweet-body'>\n            <span className='tweet-name'>{name}</span>\n            <span\n              className='tweet-username'\n              onClick={() => onUsernameClick(tweet)}\n            >\n              @{username}\n            </span>\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\n            <p>{text}</p>\n            {editing && (\n              <EditTweetForm\n                tweet={tweet}\n                onUpdate={onUpdate}\n                onClose={onClose}\n              />\n            )}\n          </div>\n        </section>\n        {owner && (\n          <div className='tweet-action'>\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\n              x\n            </button>\n            <button\n              className='tweet-action-btn'\n              onClick={() => setEditing(true)}\n            >\n              ✎\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  }\n);\nexport default TweetCard;\n","import React, { useState } from 'react';\nimport Banner from '../components/Banner';\n\nconst Login = ({ onSignUp, onLogin }) => {\n  const [signup, setSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [url, setURL] = useState('');\n  const [text, setText] = useState('');\n  const [isAlert, setIsAlert] = useState(false);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (signup) {\n      onSignUp(username, password, name, email, url).catch(setError);\n    } else {\n      onLogin(username, password).catch(setError);\n    }\n  };\n\n  const setError = (error) => {\n    setText(error.toString());\n    setIsAlert(true);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value, checked },\n    } = event;\n    switch (name) {\n      case 'username':\n        return setUsername(value);\n      case 'password':\n        return setPassword(value);\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'url':\n        return setURL(value);\n      case 'signup':\n        return setSignup(checked);\n      default:\n    }\n  };\n\n  return (\n    <>\n      <Banner text={text} isAlert={isAlert} />\n      <form className='auth-form' onSubmit={onSubmit}>\n        <input\n          name='username'\n          type='text'\n          placeholder='Id'\n          value={username}\n          onChange={onChange}\n          className='form-input'\n          required\n        />\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={password}\n          className='form-input'\n          onChange={onChange}\n        />\n        {signup && (\n          <input\n            name='name'\n            type='text'\n            placeholder='Name'\n            value={name}\n            onChange={onChange}\n            className='form-input'\n            required\n          />\n        )}\n        {signup && (\n          <input\n            name='email'\n            type='email'\n            placeholder='Email'\n            value={email}\n            onChange={onChange}\n            className='form-input'\n            required\n          />\n        )}\n        {signup && (\n          <input\n            name='url'\n            type='url'\n            placeholder='Profile Image URL'\n            value={url}\n            onChange={onChange}\n            className='form-input'\n          />\n        )}\n        <div className='form-signup'>\n          <input\n            name='signup'\n            id='signup'\n            type='checkbox'\n            onChange={onChange}\n            checked={signup}\n          />\n          <label htmlFor='signup'> Create a new account?</label>\n        </div>\n        <button className='form-btn auth-form-btn' type='submit'>\n          {signup ? 'Sign Up' : 'Sign In'}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import {\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport Header from '../components/Header';\nimport Login from '../pages/Login';\n\nconst AuthContext = createContext({});\n\nconst contextRef = createRef();\n\nexport function AuthProvider({ authService, authErrorEventBus, children }) {\n  const [user, setUser] = useState(undefined);\n\n  useImperativeHandle(contextRef, () => (user ? user.token : undefined));\n\n  useEffect(() => {\n    authErrorEventBus.listen((err) => {\n      console.log(err);\n      setUser(undefined);\n    });\n  }, [authErrorEventBus]);\n\n  useEffect(() => {\n    authService.me().then(setUser).catch(console.error);\n  }, [authService]);\n\n  const signUp = useCallback(\n    async (username, password, name, email, url) =>\n      authService\n        .signup(username, password, name, email, url)\n        .then((user) => setUser(user)),\n    [authService]\n  );\n\n  const logIn = useCallback(\n    async (username, password) =>\n      authService.login(username, password).then((user) => setUser(user)),\n    [authService]\n  );\n\n  const logout = useCallback(\n    async () => authService.logout().then(() => setUser(undefined)),\n    [authService]\n  );\n\n  const context = useMemo(\n    () => ({\n      user,\n      signUp,\n      logIn,\n      logout,\n    }),\n    [user, signUp, logIn, logout]\n  );\n\n  return (\n    <AuthContext.Provider value={context}>\n      {user ? (\n        children\n      ) : (\n        <div className='app'>\n          <Header />\n          <Login onSignUp={signUp} onLogin={logIn} />\n        </div>\n      )}\n    </AuthContext.Provider>\n  );\n}\n\nexport class AuthErrorEventBus {\n  listen(callback) {\n    this.callback = callback;\n  }\n  notify(error) {\n    this.callback(error);\n  }\n}\n\nexport default AuthContext;\nexport const fetchToken = () => contextRef.current;\nexport const useAuth = () => useContext(AuthContext);\n","import React, { memo, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Banner from './Banner';\nimport NewTweetForm from './NewTweetForm';\nimport TweetCard from './TweetCard';\nimport { useAuth } from '../context/AuthContext';\n\nconst Tweets = memo(({ tweetService, username, addable }) => {\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    tweetService\n      .getTweets(username)\n      .then((tweets) => setTweets([...tweets]))\n      .catch(onError);\n\n    const stopSync = tweetService.onSync((tweet) => onCreated(tweet));\n    return () => stopSync();\n  }, [tweetService, username, user]);\n\n  const onCreated = (tweet) => {\n    setTweets((tweets) => [tweet, ...tweets]);\n  };\n\n  const onDelete = (tweetId) =>\n    tweetService\n      .deleteTweet(tweetId)\n      .then(() =>\n        setTweets((tweets) => tweets.filter((tweet) => tweet.id !== tweetId))\n      )\n      .catch((error) => setError(error.toString()));\n\n  const onUpdate = (tweetId, text) =>\n    tweetService\n      .updateTweet(tweetId, text)\n      .then((updated) =>\n        setTweets((tweets) =>\n          tweets.map((item) => (item.id === updated.id ? updated : item))\n        )\n      )\n      .catch((error) => error.toString());\n\n  const onUsernameClick = (tweet) => history.push(`/${tweet.username}`);\n\n  const onError = (error) => {\n    setError(error.toString());\n    setTimeout(() => {\n      setError('');\n    }, 3000);\n  };\n\n  return (\n    <>\n      {addable && (\n        <NewTweetForm\n          tweetService={tweetService}\n          onError={onError}\n          onCreated={onCreated}\n        />\n      )}\n      {error && <Banner text={error} isAlert={true} transient={true} />}\n      {tweets.length === 0 && <p className='tweets-empty'>No Tweets Yet</p>}\n      <ul className='tweets'>\n        {tweets.map((tweet) => (\n          <TweetCard\n            key={tweet.id}\n            tweet={tweet}\n            owner={tweet.username === user.username}\n            onDelete={onDelete}\n            onUpdate={onUpdate}\n            onUsernameClick={onUsernameClick}\n          />\n        ))}\n      </ul>\n    </>\n  );\n});\nexport default Tweets;\n","import React from 'react';\nimport Tweets from '../components/Tweets';\n\nconst AllTweets = ({ tweetService }) => (\n  <Tweets tweetService={tweetService} addable={true} />\n);\n\nexport default AllTweets;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Tweets from '../components/Tweets';\n\nconst MyTweets = ({ tweetService }) => {\n  const { username } = useParams();\n  return (\n    <Tweets tweetService={tweetService} username={username} addable={false} />\n  );\n};\n\nexport default MyTweets;\n","import { Switch, Route, useHistory } from 'react-router-dom';\nimport Header from './components/Header';\nimport AllTweets from './pages/AllTweets';\nimport MyTweets from './pages/MyTweets';\nimport { useAuth } from './context/AuthContext';\n\nfunction App({ tweetService }) {\n  const history = useHistory();\n  const { user, logout } = useAuth();\n\n  const onAllTweets = () => {\n    history.push('/');\n  };\n\n  const onMyTweets = () => {\n    history.push(`/${user.username}`);\n  };\n\n  const onLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      logout();\n      history.push('/');\n    }\n  };\n\n  return (\n    <div className='app'>\n      <Header\n        username={user.username}\n        onLogout={onLogout}\n        onAllTweets={onAllTweets}\n        onMyTweets={onMyTweets}\n      />\n      <Switch>\n        (\n        <>\n          <Route exact path='/'>\n            <AllTweets tweetService={tweetService} />\n          </Route>\n          <Route exact path='/:username'>\n            <MyTweets tweetService={tweetService} />\n          </Route>\n        </>\n        )\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\nexport default class AuthService {\n\n  constructor(base, storage) {\n    console.log(base);\n    this.base = base;\n    this.instance = axios.create({})\n    this.storage = storage;\n  }\n\n  async login(username, password) {\n    const result = await this.instance.post(`${this.base}/auth/login`, { username, password }).then(res => res.data).catch(console.log);\n    this.storage.save(result.token);\n    return result;\n  }\n\n  async me() {\n    return await this.instance.get(`${this.base}/auth/me`).then(res => res.data);\n  }\n\n  async logout() {\n    this.storage.clear();\n  }\n\n  async signup(username, password, name, email, url) {\n    return await this.instance.post(`${this.base}/auth/signup`, {\n      username,\n      password,\n      name,\n      email,\n      url\n    }).then(res => res.data);\n  }\n}\n","import axios from 'axios';\n\nexport default class TweetService {\n  constructor(base, storage, authErrorEventBus, socket) {\n    this.instance = axios.create({\n      baseURL : base,\n    })\n    this.storage = storage;\n    this.authErrorEventBus = authErrorEventBus;\n    this.socket = socket;\n  }\n\n  setToken() {\n    this.instance.defaults.headers.common['Authorization'] = this.storage.get();\n  }\n\n  async getTweets(username = '') {\n    console.log(username);\n    return await this.instance.get('/tweets',{\n        params : {\n          user : username || ''\n        },\n        headers : {\n          Authorization : this.storage.get()\n        }\n      }).then(res => res.data).catch(this.isExpired);\n  }\n\n  async postTweet(text) {\n    const tweet = await axios.post('http://localhost:8080/tweets', {\n      id: Date.now(),\n      createdAt: new Date(),\n      userId : 1,\n      text,\n    }, {\n      headers : {\n        Authorization : this.storage.get()\n      }}).then(res => res.data).catch();\n    return tweet;\n  }\n\n  async deleteTweet(tweetId) {\n    await axios.delete(`${this.baseUrl}/tweets/${tweetId}`, {\n      params : {\n        id : tweetId\n      },\n      headers : {\n        Authorization : this.storage.get()\n      }\n    }).then(console.log);\n  }\n\n  async updateTweet(tweetId, text) {\n    return await axios.put(`${this.baseUrl}/tweets/${tweetId}`, {\n      text,\n      tweetId,\n      headers : {\n        Authorization : this.storage.get()\n      }\n    }).then(res => res.data);\n  }\n\n\n  isExpired = (e) => {\n    if(e.response.status === 401) {\n      console.log(this)\n      this.authErrorEventBus.notify(e);\n      return;\n    }\n  }\n\n  onSync(callback){\n    return this.socket.onSync('tweets', callback);\n  }\n}\n\n","const TOKEN = 'token';\r\n\r\nexport default class TokenStorage {\r\n  save(token) {\r\n    localStorage.setItem(TOKEN, 'Bearer ' + token);\r\n  }\r\n\r\n  get() {\r\n    return localStorage.getItem(TOKEN);\r\n  }\r\n\r\n  clear() {\r\n    localStorage.clear(TOKEN)\r\n  }\r\n}","import socket from 'socket.io-client';\r\n\r\nexport default class Socket {\r\n  constructor(url, getToken) {\r\n    this.socketIO = socket(url, {\r\n      auth : (f) => f({ token : getToken() }),\r\n    });\r\n\r\n    this.socketIO.on('connect_error', (error) => {\r\n      console.error(error);\r\n    })\r\n    \r\n  }\r\n\r\n  onSync(event, callback) {\r\n    if(!this.socketIO.connected) {\r\n      this.socketIO.connect();\r\n    }\r\n    this.socketIO.on(event, callback);\r\n    return () => this.socketIO.off(event);\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthService from './service/auth';\nimport TweetService from './service/tweet';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport { AuthErrorEventBus } from './context/AuthContext';\nimport TokenStorage from './db/token.js';\nimport Socket from './connection/connect.js';\nimport socket from 'socket.io-client';\n\nconst tokenStorage = new TokenStorage();\nconst baseURL = process.env.REACT_APP_BASE_URL;\n\nlet socketIO = socket(baseURL);\n\nsocketIO.on('connect_error', (error) => {\n  console.error(error);\n})\nsocketIO.on('dwitter', (msg) => { console.log(' 듣고 이따 !!!! ', msg)});\n\nconst mysocket = new Socket(baseURL, () => tokenStorage.get());\n\nmysocket.onSync('dwitter', (msg)=>{console.log(msg)});\n\nconst authErrorEventBus = new AuthErrorEventBus();\nconst authService = new AuthService(baseURL, tokenStorage);\nconst tweetService = new TweetService(baseURL, tokenStorage, authErrorEventBus, mysocket);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider\n        authService={authService}\n        authErrorEventBus={authErrorEventBus}\n      >\n        <App tweetService={tweetService} />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}